apply plugin: 'maven-publish'

/*
Publish the library to the remote GitHub maven repo:
./gradlew clean assembleRelease publish

Publish the library to the local maven repo:
./gradlew clean assembleRelease publishToMavenLocal

To use locally published library go to to root build.gradle > allProjects > repositories
and replace GitHub maven repo declaration with mavenLocal()
 */
static def setupDependencies(dependenciesNode, dependencies) {
    dependencyResolutionManagement {
        repositoriesMode.set(RepositoriesMode.PREFER_SETTINGS)
    }
    dependencies.each {
        def dependencyNode = dependenciesNode.appendNode('dependency')
        dependencyNode.appendNode('groupId', it.group)
        dependencyNode.appendNode('artifactId', it.name)
        dependencyNode.appendNode('version', it.version)
    }
}

def GROUP_ID = 'com.appboosty.premiumhelper'
def ARTIFACT_ID = 'premiumhelper'
def VERSION_NAME = getPremiumHelperVersion()

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "sources"
}

publishing {
    repositories {
        maven {
            name = "GithubPackages"
            url = uri("https://maven.pkg.github.com/AppBoosty/premium-helper")
            credentials {
                username = 'app-boosty'
                password = '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'
            }
        }
    }
    publications {
        regular(MavenPublication) {
            groupId GROUP_ID
            artifactId ARTIFACT_ID
            version VERSION_NAME
            artifact("$buildDir/outputs/aar/premium-helper-regular-release.aar")
            artifact(sourceJar)
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                setupDependencies(dependenciesNode, configurations.api.allDependencies)
            }
        }
    }
}